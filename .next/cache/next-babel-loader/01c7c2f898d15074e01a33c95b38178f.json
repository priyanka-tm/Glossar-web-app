{"ast":null,"code":"import { BLOG } from \"../actionTypes\";\nimport * as blogApis from \"../../apis/blog\"; //Fetch all posts\n\nexport const fetchPosts = () => ({\n  type: BLOG.FETCH_POSTS\n});\nexport const fetchPostsSuccess = (data, postCount) => ({\n  type: BLOG.FETCH_POSTS_SUCCESS,\n  payload: {\n    data,\n    postCount\n  }\n});\nexport const fetchPostsFail = err => ({\n  type: BLOG.FETCH_POSTS_FAIL,\n  payload: {\n    err\n  }\n});\nexport const fetchPostsRequest = query => {\n  return dispatch => {\n    dispatch(fetchPosts());\n    blogApis.fetchBlogData(query).then(res => {\n      dispatch(fetchPostsSuccess(res.data, res.headers[\"x-total-count\"]));\n    }).catch(err => {\n      dispatch(fetchPostsFail(err));\n    });\n  };\n}; //Fetch recent posts\n\nexport const fetchRecentPosts = () => ({\n  type: BLOG.FETCH_RECENT_POSTS\n});\nexport const fetchRecentPostsSuccess = (data, postCount) => ({\n  type: BLOG.FETCH_RECENT_POSTS_SUCCESS,\n  payload: {\n    data,\n    postCount\n  }\n});\nexport const fetchRecentPostsFail = err => ({\n  type: BLOG.FETCH_RECENT_POSTS_FAIL,\n  payload: {\n    err\n  }\n});\nexport const fetchRecentPostsRequest = query => {\n  return dispatch => {\n    dispatch(fetchRecentPosts());\n    blogApis.fetchRecentPostData(query).then(res => {\n      dispatch(fetchRecentPostsSuccess(res.data, res.headers[\"x-total-count\"]));\n    }).catch(err => {\n      dispatch(fetchRecentPostsFail(err));\n    });\n  };\n}; //Fetch post details\n\nexport const fetchPostDetail = () => ({\n  type: BLOG.FETCH_POST_DETAIL\n});\nexport const fetchPostDetailSuccess = data => ({\n  type: BLOG.FETCH_POST_DETAIL_SUCCESS,\n  payload: {\n    data\n  }\n});\nexport const fetchPostDetailFail = err => ({\n  type: BLOG.FETCH_POST_DETAIL_FAIL,\n  payload: {\n    err\n  }\n});\nexport const fetchPostDetailRequest = slug => {\n  return dispatch => {\n    dispatch(fetchPostDetail());\n    blogApis.fetchPostDetailData(slug).then(res => {\n      dispatch(fetchPostDetailSuccess(res.data));\n    }).catch(err => {\n      dispatch(fetchPostDetailFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/lenovo/OneDrive/Desktop/ogami-main/ogami/src/redux/actions/blogActions.js"],"names":["BLOG","blogApis","fetchPosts","type","FETCH_POSTS","fetchPostsSuccess","data","postCount","FETCH_POSTS_SUCCESS","payload","fetchPostsFail","err","FETCH_POSTS_FAIL","fetchPostsRequest","query","dispatch","fetchBlogData","then","res","headers","catch","fetchRecentPosts","FETCH_RECENT_POSTS","fetchRecentPostsSuccess","FETCH_RECENT_POSTS_SUCCESS","fetchRecentPostsFail","FETCH_RECENT_POSTS_FAIL","fetchRecentPostsRequest","fetchRecentPostData","fetchPostDetail","FETCH_POST_DETAIL","fetchPostDetailSuccess","FETCH_POST_DETAIL_SUCCESS","fetchPostDetailFail","FETCH_POST_DETAIL_FAIL","fetchPostDetailRequest","slug","fetchPostDetailData"],"mappings":"AAAA,SAASA,IAAT,QAAqB,gBAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,iBAA1B,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAG,OAAO;AAC/BC,EAAAA,IAAI,EAAEH,IAAI,CAACI;AADoB,CAAP,CAAnB;AAIP,OAAO,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAOC,SAAP,MAAsB;AACrDJ,EAAAA,IAAI,EAAEH,IAAI,CAACQ,mBAD0C;AAErDC,EAAAA,OAAO,EAAE;AACPH,IAAAA,IADO;AAEPC,IAAAA;AAFO;AAF4C,CAAtB,CAA1B;AAQP,OAAO,MAAMG,cAAc,GAAIC,GAAD,KAAU;AACtCR,EAAAA,IAAI,EAAEH,IAAI,CAACY,gBAD2B;AAEtCH,EAAAA,OAAO,EAAE;AACPE,IAAAA;AADO;AAF6B,CAAV,CAAvB;AAOP,OAAO,MAAME,iBAAiB,GAAIC,KAAD,IAAW;AAC1C,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACb,UAAU,EAAX,CAAR;AACAD,IAAAA,QAAQ,CACLe,aADH,CACiBF,KADjB,EAEGG,IAFH,CAESC,GAAD,IAAS;AACbH,MAAAA,QAAQ,CAACV,iBAAiB,CAACa,GAAG,CAACZ,IAAL,EAAWY,GAAG,CAACC,OAAJ,CAAY,eAAZ,CAAX,CAAlB,CAAR;AACD,KAJH,EAKGC,KALH,CAKUT,GAAD,IAAS;AACdI,MAAAA,QAAQ,CAACL,cAAc,CAACC,GAAD,CAAf,CAAR;AACD,KAPH;AAQD,GAVD;AAWD,CAZM,C,CAcP;;AACA,OAAO,MAAMU,gBAAgB,GAAG,OAAO;AACrClB,EAAAA,IAAI,EAAEH,IAAI,CAACsB;AAD0B,CAAP,CAAzB;AAIP,OAAO,MAAMC,uBAAuB,GAAG,CAACjB,IAAD,EAAOC,SAAP,MAAsB;AAC3DJ,EAAAA,IAAI,EAAEH,IAAI,CAACwB,0BADgD;AAE3Df,EAAAA,OAAO,EAAE;AACPH,IAAAA,IADO;AAEPC,IAAAA;AAFO;AAFkD,CAAtB,CAAhC;AAQP,OAAO,MAAMkB,oBAAoB,GAAId,GAAD,KAAU;AAC5CR,EAAAA,IAAI,EAAEH,IAAI,CAAC0B,uBADiC;AAE5CjB,EAAAA,OAAO,EAAE;AACPE,IAAAA;AADO;AAFmC,CAAV,CAA7B;AAOP,OAAO,MAAMgB,uBAAuB,GAAIb,KAAD,IAAW;AAChD,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACM,gBAAgB,EAAjB,CAAR;AACApB,IAAAA,QAAQ,CACL2B,mBADH,CACuBd,KADvB,EAEGG,IAFH,CAESC,GAAD,IAAS;AACbH,MAAAA,QAAQ,CACNQ,uBAAuB,CAACL,GAAG,CAACZ,IAAL,EAAWY,GAAG,CAACC,OAAJ,CAAY,eAAZ,CAAX,CADjB,CAAR;AAGD,KANH,EAOGC,KAPH,CAOUT,GAAD,IAAS;AACdI,MAAAA,QAAQ,CAACU,oBAAoB,CAACd,GAAD,CAArB,CAAR;AACD,KATH;AAUD,GAZD;AAaD,CAdM,C,CAgBP;;AAEA,OAAO,MAAMkB,eAAe,GAAG,OAAO;AACpC1B,EAAAA,IAAI,EAAEH,IAAI,CAAC8B;AADyB,CAAP,CAAxB;AAIP,OAAO,MAAMC,sBAAsB,GAAIzB,IAAD,KAAW;AAC/CH,EAAAA,IAAI,EAAEH,IAAI,CAACgC,yBADoC;AAE/CvB,EAAAA,OAAO,EAAE;AACPH,IAAAA;AADO;AAFsC,CAAX,CAA/B;AAOP,OAAO,MAAM2B,mBAAmB,GAAItB,GAAD,KAAU;AAC3CR,EAAAA,IAAI,EAAEH,IAAI,CAACkC,sBADgC;AAE3CzB,EAAAA,OAAO,EAAE;AACPE,IAAAA;AADO;AAFkC,CAAV,CAA5B;AAOP,OAAO,MAAMwB,sBAAsB,GAAIC,IAAD,IAAU;AAC9C,SAAQrB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACc,eAAe,EAAhB,CAAR;AACA5B,IAAAA,QAAQ,CACLoC,mBADH,CACuBD,IADvB,EAEGnB,IAFH,CAESC,GAAD,IAAS;AACbH,MAAAA,QAAQ,CAACgB,sBAAsB,CAACb,GAAG,CAACZ,IAAL,CAAvB,CAAR;AACD,KAJH,EAKGc,KALH,CAKUT,GAAD,IAAS;AACdI,MAAAA,QAAQ,CAACkB,mBAAmB,CAACtB,GAAD,CAApB,CAAR;AACD,KAPH;AAQD,GAVD;AAWD,CAZM","sourcesContent":["import { BLOG } from \"../actionTypes\";\nimport * as blogApis from \"../../apis/blog\";\n\n//Fetch all posts\nexport const fetchPosts = () => ({\n  type: BLOG.FETCH_POSTS,\n});\n\nexport const fetchPostsSuccess = (data, postCount) => ({\n  type: BLOG.FETCH_POSTS_SUCCESS,\n  payload: {\n    data,\n    postCount,\n  },\n});\n\nexport const fetchPostsFail = (err) => ({\n  type: BLOG.FETCH_POSTS_FAIL,\n  payload: {\n    err,\n  },\n});\n\nexport const fetchPostsRequest = (query) => {\n  return (dispatch) => {\n    dispatch(fetchPosts());\n    blogApis\n      .fetchBlogData(query)\n      .then((res) => {\n        dispatch(fetchPostsSuccess(res.data, res.headers[\"x-total-count\"]));\n      })\n      .catch((err) => {\n        dispatch(fetchPostsFail(err));\n      });\n  };\n};\n\n//Fetch recent posts\nexport const fetchRecentPosts = () => ({\n  type: BLOG.FETCH_RECENT_POSTS,\n});\n\nexport const fetchRecentPostsSuccess = (data, postCount) => ({\n  type: BLOG.FETCH_RECENT_POSTS_SUCCESS,\n  payload: {\n    data,\n    postCount,\n  },\n});\n\nexport const fetchRecentPostsFail = (err) => ({\n  type: BLOG.FETCH_RECENT_POSTS_FAIL,\n  payload: {\n    err,\n  },\n});\n\nexport const fetchRecentPostsRequest = (query) => {\n  return (dispatch) => {\n    dispatch(fetchRecentPosts());\n    blogApis\n      .fetchRecentPostData(query)\n      .then((res) => {\n        dispatch(\n          fetchRecentPostsSuccess(res.data, res.headers[\"x-total-count\"])\n        );\n      })\n      .catch((err) => {\n        dispatch(fetchRecentPostsFail(err));\n      });\n  };\n};\n\n//Fetch post details\n\nexport const fetchPostDetail = () => ({\n  type: BLOG.FETCH_POST_DETAIL,\n});\n\nexport const fetchPostDetailSuccess = (data) => ({\n  type: BLOG.FETCH_POST_DETAIL_SUCCESS,\n  payload: {\n    data,\n  },\n});\n\nexport const fetchPostDetailFail = (err) => ({\n  type: BLOG.FETCH_POST_DETAIL_FAIL,\n  payload: {\n    err,\n  },\n});\n\nexport const fetchPostDetailRequest = (slug) => {\n  return (dispatch) => {\n    dispatch(fetchPostDetail());\n    blogApis\n      .fetchPostDetailData(slug)\n      .then((res) => {\n        dispatch(fetchPostDetailSuccess(res.data));\n      })\n      .catch((err) => {\n        dispatch(fetchPostDetailFail(err));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}