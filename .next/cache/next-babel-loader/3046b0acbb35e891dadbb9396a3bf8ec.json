{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport axios from \"axios\";\n\nvar AxiosService = /*#__PURE__*/function () {\n  function AxiosService() {\n    _classCallCheck(this, AxiosService);\n\n    var instance = axios.create();\n    instance.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.instance = instance;\n  }\n\n  _createClass(AxiosService, [{\n    key: \"handleSuccess\",\n    value: function handleSuccess(response) {\n      return response;\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(error) {\n      return Promise.reject(error);\n    }\n  }, {\n    key: \"get\",\n    value: function get(url) {\n      var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.instance.get(url, headers);\n    }\n  }, {\n    key: \"post\",\n    value: function post(url, body) {\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      console.log('headers: ', headers);\n      return this.instance.post(url, body, headers);\n    }\n  }, {\n    key: \"patch\",\n    value: function patch(url, body) {\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.instance.patch(url, body, headers);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(url) {\n      return this.instance[\"delete\"](url);\n    }\n  }, {\n    key: \"put\",\n    value: function put(url, body) {\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.instance.put(url, body, headers);\n    }\n  }]);\n\n  return AxiosService;\n}();\n\nexport default new AxiosService();","map":{"version":3,"sources":["E:/clg-project/Glossar-web-app/src/common/axiosService.js"],"names":["axios","AxiosService","instance","create","interceptors","response","use","handleSuccess","handleError","error","Promise","reject","url","headers","get","body","console","log","post","patch","put"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,Y;AACJ,0BAAc;AAAA;;AACZ,QAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,EAAjB;AACAD,IAAAA,QAAQ,CAACE,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CAAmC,KAAKC,aAAxC,EAAuD,KAAKC,WAA5D;AACA,SAAKN,QAAL,GAAgBA,QAAhB;AACD;;;;kCAEaG,Q,EAAU;AACtB,aAAOA,QAAP;AACD;;;gCAEWI,K,EAAO;AACjB,aAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD;;;wBAEGG,G,EAAmB;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AACrB,aAAO,KAAKX,QAAL,CAAcY,GAAd,CAAkBF,GAAlB,EAAuBC,OAAvB,CAAP;AACD;;;yBAEID,G,EAAKG,I,EAAoB;AAAA,UAAdF,OAAc,uEAAJ,EAAI;AAC5BG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,OAAzB;AACA,aAAO,KAAKX,QAAL,CAAcgB,IAAd,CAAmBN,GAAnB,EAAwBG,IAAxB,EAA8BF,OAA9B,CAAP;AACD;;;0BAEKD,G,EAAKG,I,EAAoB;AAAA,UAAdF,OAAc,uEAAJ,EAAI;AAC7B,aAAO,KAAKX,QAAL,CAAciB,KAAd,CAAoBP,GAApB,EAAyBG,IAAzB,EAA+BF,OAA/B,CAAP;AACD;;;4BAEMD,G,EAAK;AACV,aAAO,KAAKV,QAAL,WAAqBU,GAArB,CAAP;AACD;;;wBAEGA,G,EAAKG,I,EAAoB;AAAA,UAAdF,OAAc,uEAAJ,EAAI;AAC3B,aAAO,KAAKX,QAAL,CAAckB,GAAd,CAAkBR,GAAlB,EAAuBG,IAAvB,EAA6BF,OAA7B,CAAP;AACD;;;;;;AAGH,eAAe,IAAIZ,YAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nclass AxiosService {\r\n  constructor() {\r\n    const instance = axios.create();\r\n    instance.interceptors.response.use(this.handleSuccess, this.handleError);\r\n    this.instance = instance;\r\n  }\r\n\r\n  handleSuccess(response) {\r\n    return response;\r\n  }\r\n\r\n  handleError(error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  get(url, headers = {}) {\r\n    return this.instance.get(url, headers);\r\n  }\r\n\r\n  post(url, body, headers = {}) {\r\n    console.log('headers: ', headers);\r\n    return this.instance.post(url, body, headers);\r\n  }\r\n\r\n  patch(url, body, headers = {}) {\r\n    return this.instance.patch(url, body, headers);\r\n  }\r\n\r\n  delete(url) {\r\n    return this.instance.delete(url);\r\n  }\r\n\r\n  put(url, body, headers = {}) {\r\n    return this.instance.put(url, body, headers);\r\n  }\r\n}\r\n\r\nexport default new AxiosService();\r\n"]},"metadata":{},"sourceType":"module"}