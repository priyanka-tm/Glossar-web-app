{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"E:\\\\clg-project\\\\Glossar-web-app\\\\src\\\\components\\\\sections\\\\product-thumb\\\\ProductTab.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Tabs, Row, Col, Empty, Skeleton } from \"antd\";\nimport classNames from \"classnames\";\nimport SectionTitle from \"../../other/SectionTitle\";\nimport Product from \"../../product/Product\";\nimport FetchDataHandle from \"../../other/FetchDataHandle\";\n\nfunction ProductTab(_ref) {\n  var _this = this;\n\n  var style = _ref.style,\n      data = _ref.data,\n      className = _ref.className,\n      onTabChange = _ref.onTabChange,\n      productClassName = _ref.productClassName,\n      headerCategories = _ref.headerCategories,\n      headerTitle = _ref.headerTitle,\n      headerClass = _ref.headerClass,\n      _ref$showTitleDecorat = _ref.showTitleDecoration,\n      showTitleDecoration = _ref$showTitleDecorat === void 0 ? false : _ref$showTitleDecorat,\n      _ref$headerType = _ref.headerType,\n      headerType = _ref$headerType === void 0 ? \"grid\" : _ref$headerType,\n      productCol = _ref.productCol;\n  console.log('headerCategories: ', headerCategories);\n  var TabPane = Tabs.TabPane;\n\n  var onChooseCategory = function onChooseCategory(key) {\n    onTabChange(key);\n  };\n\n  var renderTabContent = function renderTabContent() {\n    return __jsx(FetchDataHandle, {\n      data: data,\n      renderData: function renderData(data) {\n        return __jsx(Row, {\n          gutter: [{\n            xs: 0,\n            md: 15\n          }, {\n            xs: 0,\n            md: 15\n          }],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 9\n          }\n        }, data.map(function (item, index) {\n          return __jsx(Col, _extends({\n            key: index\n          }, productCol, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }\n          }), __jsx(Product, {\n            className: productClassName,\n            data: item,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }\n          }));\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"product-tab \".concat(classNames(className)),\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"product-tab-header \".concat(headerType === \"row\" ? \"-style-two\" : \"style-one\", \"  \").concat(classNames(headerClass)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, headerType === \"grid\" && __jsx(SectionTitle, {\n    title: headerTitle,\n    className: \"-center\",\n    hideDecoration: showTitleDecoration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), __jsx(Tabs, {\n    tabBarExtraContent: headerType === \"row\" ? {\n      left: __jsx(SectionTitle, {\n        title: headerTitle,\n        className: \"-center\",\n        hideDecoration: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      })\n    } : null,\n    defaultActiveKey: \"1\",\n    centered: headerType === \"row\" ? false : true,\n    onChange: onChooseCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(TabPane, {\n    tab: \"All\",\n    key: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, renderTabContent()), headerCategories.map(function (item, index) {\n    console.log('item: ', item);\n    return __jsx(TabPane, {\n      tab: item,\n      key: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, renderTabContent());\n  }))));\n}\n\n_c = ProductTab;\nexport default _c2 = /*#__PURE__*/React.memo(ProductTab);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductTab\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/clg-project/Glossar-web-app/src/components/sections/product-thumb/ProductTab.js"],"names":["React","useEffect","useState","Tabs","Row","Col","Empty","Skeleton","classNames","SectionTitle","Product","FetchDataHandle","ProductTab","style","data","className","onTabChange","productClassName","headerCategories","headerTitle","headerClass","showTitleDecoration","headerType","productCol","console","log","TabPane","onChooseCategory","key","renderTabContent","xs","md","map","item","index","left","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Tabs, Row, Col, Empty, Skeleton } from \"antd\";\r\nimport classNames from \"classnames\";\r\n\r\nimport SectionTitle from \"../../other/SectionTitle\";\r\nimport Product from \"../../product/Product\";\r\nimport FetchDataHandle from \"../../other/FetchDataHandle\";\r\n\r\nfunction ProductTab({\r\n  style,\r\n  data,\r\n  className,\r\n  onTabChange,\r\n  productClassName,\r\n  headerCategories,\r\n  headerTitle,\r\n  headerClass,\r\n  showTitleDecoration = false,\r\n  headerType = \"grid\",\r\n  productCol,\r\n}) {\r\n  console.log('headerCategories: ', headerCategories);\r\n  const { TabPane } = Tabs;\r\n  const onChooseCategory = (key) => {\r\n    onTabChange(key);\r\n  };\r\n  const renderTabContent = () => (\r\n    <FetchDataHandle\r\n      data={data}\r\n      renderData={(data) => (\r\n        <Row\r\n          gutter={[\r\n            { xs: 0, md: 15 },\r\n            { xs: 0, md: 15 },\r\n          ]}\r\n        >\r\n          {data.map((item, index) => (\r\n            <Col key={index} {...productCol}>\r\n              <Product className={productClassName} data={item} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    />\r\n  );\r\n  return (\r\n    <div className={`product-tab ${classNames(className)}`} style={style}>\r\n      <div\r\n        className={`product-tab-header ${\r\n          headerType === \"row\" ? \"-style-two\" : \"style-one\"\r\n        }  ${classNames(headerClass)}`}\r\n      >\r\n        {headerType === \"grid\" && (\r\n          <SectionTitle\r\n            title={headerTitle}\r\n            className=\"-center\"\r\n            hideDecoration={showTitleDecoration}\r\n          />\r\n        )}\r\n        <Tabs\r\n          tabBarExtraContent={\r\n            headerType === \"row\"\r\n              ? {\r\n                  left: (\r\n                    <SectionTitle\r\n                      title={headerTitle}\r\n                      className=\"-center\"\r\n                      hideDecoration\r\n                    />\r\n                  ),\r\n                }\r\n              : null\r\n          }\r\n          defaultActiveKey=\"1\"\r\n          centered={headerType === \"row\" ? false : true}\r\n          onChange={onChooseCategory}\r\n        >\r\n          <TabPane tab=\"All\" key=\"\">\r\n            {renderTabContent()}\r\n          </TabPane>\r\n          {headerCategories.map((item, index) => {\r\n            console.log('item: ', item);\r\n\r\n            return (\r\n            \r\n            <TabPane tab={item} key={item}>\r\n              {renderTabContent()}\r\n            </TabPane>\r\n          )\r\n          } )}\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(ProductTab);\r\n"]},"metadata":{},"sourceType":"module"}