{"ast":null,"code":"import axios from \"axios\";\n\nclass AxiosService {\n  constructor() {\n    const instance = axios.create();\n    instance.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.instance = instance;\n  }\n\n  handleSuccess(response) {\n    return response;\n  }\n\n  handleError(error) {\n    return Promise.reject(error);\n  }\n\n  get(url, headers = {}) {\n    return this.instance.get(url, headers);\n  }\n\n  post(url, body, headers = {}) {\n    console.log('headers: ', headers);\n    return this.instance.post(url, body, headers);\n  }\n\n  patch(url, body, headers = {}) {\n    return this.instance.patch(url, body, headers);\n  }\n\n  delete(url) {\n    return this.instance.delete(url);\n  }\n\n  put(url, body, headers = {}) {\n    return this.instance.put(url, body, headers);\n  }\n\n}\n\nexport default new AxiosService();","map":{"version":3,"sources":["E:/clg-project/Glossar-web-app/src/common/axiosService.js"],"names":["axios","AxiosService","constructor","instance","create","interceptors","response","use","handleSuccess","handleError","error","Promise","reject","get","url","headers","post","body","console","log","patch","delete","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,CAAmB;AACjBC,EAAAA,WAAW,GAAG;AACZ,UAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,EAAjB;AACAD,IAAAA,QAAQ,CAACE,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CAAmC,KAAKC,aAAxC,EAAuD,KAAKC,WAA5D;AACA,SAAKN,QAAL,GAAgBA,QAAhB;AACD;;AAEDK,EAAAA,aAAa,CAACF,QAAD,EAAW;AACtB,WAAOA,QAAP;AACD;;AAEDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD;;AAEDG,EAAAA,GAAG,CAACC,GAAD,EAAMC,OAAO,GAAG,EAAhB,EAAoB;AACrB,WAAO,KAAKZ,QAAL,CAAcU,GAAd,CAAkBC,GAAlB,EAAuBC,OAAvB,CAAP;AACD;;AAEDC,EAAAA,IAAI,CAACF,GAAD,EAAMG,IAAN,EAAYF,OAAO,GAAG,EAAtB,EAA0B;AAC5BG,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,OAAzB;AACA,WAAO,KAAKZ,QAAL,CAAca,IAAd,CAAmBF,GAAnB,EAAwBG,IAAxB,EAA8BF,OAA9B,CAAP;AACD;;AAEDK,EAAAA,KAAK,CAACN,GAAD,EAAMG,IAAN,EAAYF,OAAO,GAAG,EAAtB,EAA0B;AAC7B,WAAO,KAAKZ,QAAL,CAAciB,KAAd,CAAoBN,GAApB,EAAyBG,IAAzB,EAA+BF,OAA/B,CAAP;AACD;;AAEDM,EAAAA,MAAM,CAACP,GAAD,EAAM;AACV,WAAO,KAAKX,QAAL,CAAckB,MAAd,CAAqBP,GAArB,CAAP;AACD;;AAEDQ,EAAAA,GAAG,CAACR,GAAD,EAAMG,IAAN,EAAYF,OAAO,GAAG,EAAtB,EAA0B;AAC3B,WAAO,KAAKZ,QAAL,CAAcmB,GAAd,CAAkBR,GAAlB,EAAuBG,IAAvB,EAA6BF,OAA7B,CAAP;AACD;;AAlCgB;;AAqCnB,eAAe,IAAId,YAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nclass AxiosService {\r\n  constructor() {\r\n    const instance = axios.create();\r\n    instance.interceptors.response.use(this.handleSuccess, this.handleError);\r\n    this.instance = instance;\r\n  }\r\n\r\n  handleSuccess(response) {\r\n    return response;\r\n  }\r\n\r\n  handleError(error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  get(url, headers = {}) {\r\n    return this.instance.get(url, headers);\r\n  }\r\n\r\n  post(url, body, headers = {}) {\r\n    console.log('headers: ', headers);\r\n    return this.instance.post(url, body, headers);\r\n  }\r\n\r\n  patch(url, body, headers = {}) {\r\n    return this.instance.patch(url, body, headers);\r\n  }\r\n\r\n  delete(url) {\r\n    return this.instance.delete(url);\r\n  }\r\n\r\n  put(url, body, headers = {}) {\r\n    return this.instance.put(url, body, headers);\r\n  }\r\n}\r\n\r\nexport default new AxiosService();\r\n"]},"metadata":{},"sourceType":"module"}