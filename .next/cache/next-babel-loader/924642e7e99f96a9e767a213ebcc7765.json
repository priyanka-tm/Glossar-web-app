{"ast":null,"code":"import { v4 as uuidv4 } from \"uuid\";\nimport { fetchProductIdCartData, addCartData, updateCartData, removeCartData } from \"../apis/cart\";\nexport const onAddProductToCart = ({\n  product,\n  quantity = 1,\n  onSuccess,\n  onError,\n  getQuantityAvailable = () => true\n}) => {\n  fetchProductIdCartData(product.id).then(res => {\n    if (res.data.length === 0) {\n      if (product.quantity === 0) {\n        onError && onError(\"Reached maximum number of products\");\n        getQuantityAvailable && getQuantityAvailable(false);\n      } else {\n        console.log('product:===== ', product);\n        addCartData({\n          // ...product,\n          // id: uuidv4(),\n          \"product\": [{\n            \"item\": product.id,\n            \"quantity\": quantity\n          }] // item: product.id,\n          // quantity: quantity,\n\n        }).then(res => {\n          console.log('res:===== ', res);\n          onSuccess && onSuccess(res);\n        }).catch(err => {\n          console.log('err: ', err.response);\n          onError && onError(\"Add product to cart failed, please try again\", err);\n        });\n      }\n    } else {\n      let pData = res.data[0];\n\n      if (pData.cartQuantity + quantity > pData.quantity) {\n        onError && onError(\"Reached maximum number of products\");\n        getQuantityAvailable(false);\n      } else {\n        updateCartData(pData.id, {\n          cartQuantity: pData.cartQuantity + quantity\n        }).then(res => {\n          onSuccess && onSuccess(res);\n        }).catch(err => onError && onError(\"Add product to cart failed, please try again\", err));\n      }\n    }\n  }).catch(err => onError && onError(\"Add product to cart failed, please try again\", err));\n};\nexport const onRemoveProductFromCart = ({\n  cartId,\n  onSuccess,\n  onError\n}) => {\n  console.log('cartId: ', cartId);\n\n  if (cartId && cartId !== \"\" && cartId !== null) {\n    removeCartData({\n      \"product\": [{\n        \"item\": cartId\n      }]\n    }).then(res => onSuccess && onSuccess(res)).catch(err => onError && onError(\"Remove product failm, pleaser try again\", err));\n  }\n};\nexport const onChangeProductCartQuantity = ({\n  product,\n  quantity,\n  onSuccess\n}) => {\n  if (quantity > product.quantity || quantity < 1) {\n    return;\n  }\n\n  updateCartData(product.id, {\n    cartQuantity: quantity\n  }).then(res => onSuccess && onSuccess(res)).catch(err => console.log(err));\n};","map":{"version":3,"sources":["E:/clg-project/Glossar-web-app/src/common/cartServices.js"],"names":["v4","uuidv4","fetchProductIdCartData","addCartData","updateCartData","removeCartData","onAddProductToCart","product","quantity","onSuccess","onError","getQuantityAvailable","id","then","res","data","length","console","log","catch","err","response","pData","cartQuantity","onRemoveProductFromCart","cartId","onChangeProductCartQuantity"],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  fetchProductIdCartData,\r\n  addCartData,\r\n  updateCartData,\r\n  removeCartData,\r\n} from \"../apis/cart\";\r\n\r\nexport const onAddProductToCart = ({\r\n  product,\r\n  quantity = 1,\r\n  onSuccess,\r\n  onError,\r\n  getQuantityAvailable = () => true,\r\n}) => {\r\n  fetchProductIdCartData(product.id)\r\n    .then((res) => {\r\n      if (res.data.length === 0) {\r\n        if (product.quantity === 0) {\r\n          onError && onError(\"Reached maximum number of products\");\r\n          getQuantityAvailable && getQuantityAvailable(false);\r\n        } else {\r\n          console.log('product:===== ', product);\r\n          addCartData({\r\n            // ...product,\r\n            // id: uuidv4(),\r\n            \"product\": [\r\n              {\r\n                  \"item\": product.id,\r\n                  \"quantity\": quantity\r\n              }\r\n             \r\n          ]\r\n            // item: product.id,\r\n            // quantity: quantity,\r\n          })\r\n            .then((res) => {\r\n              console.log('res:===== ', res);\r\n              onSuccess && onSuccess(res)\r\n            })\r\n            \r\n            .catch(\r\n              (err) =>{\r\n                console.log('err: ', err.response);\r\n                onError &&\r\n                onError(\"Add product to cart failed, please try again\", err)\r\n            \r\n              }\r\n              );\r\n        }\r\n      } else {\r\n        let pData = res.data[0];\r\n        if (pData.cartQuantity + quantity > pData.quantity) {\r\n          onError && onError(\"Reached maximum number of products\");\r\n          getQuantityAvailable(false);\r\n        } else {\r\n          updateCartData(pData.id, {\r\n            cartQuantity: pData.cartQuantity + quantity,\r\n          })\r\n            .then((res) => {\r\n              onSuccess && onSuccess(res);\r\n            })\r\n            .catch(\r\n              (err) =>\r\n                onError &&\r\n                onError(\"Add product to cart failed, please try again\", err)\r\n            );\r\n        }\r\n      }\r\n    })\r\n    .catch(\r\n      (err) =>\r\n        onError && onError(\"Add product to cart failed, please try again\", err)\r\n    );\r\n};\r\n\r\nexport const onRemoveProductFromCart = ({ cartId, onSuccess, onError }) => {\r\n  console.log('cartId: ', cartId);\r\n  \r\n  if (cartId && cartId !== \"\" && cartId !== null) {\r\n    removeCartData({\r\n      \"product\": [\r\n        {\r\n            \"item\": cartId\r\n           \r\n        }\r\n        \r\n    ]\r\n      \r\n    })\r\n      .then((res) => onSuccess && onSuccess(res))\r\n      .catch(\r\n        (err) =>\r\n          onError && onError(\"Remove product failm, pleaser try again\", err)\r\n      );\r\n  }\r\n};\r\n\r\nexport const onChangeProductCartQuantity = ({\r\n  product,\r\n  quantity,\r\n  onSuccess,\r\n}) => {\r\n  if (quantity > product.quantity || quantity < 1) {\r\n    return;\r\n  }\r\n  updateCartData(product.id, { cartQuantity: quantity })\r\n    .then((res) => onSuccess && onSuccess(res))\r\n    .catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}