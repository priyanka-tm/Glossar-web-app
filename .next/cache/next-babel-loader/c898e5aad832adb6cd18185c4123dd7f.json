{"ast":null,"code":"import { BLOG } from \"../actionTypes\";\nimport * as blogApis from \"../../apis/blog\"; //Fetch all posts\n\nexport var fetchPosts = function fetchPosts() {\n  return {\n    type: BLOG.FETCH_POSTS\n  };\n};\nexport var fetchPostsSuccess = function fetchPostsSuccess(data, postCount) {\n  return {\n    type: BLOG.FETCH_POSTS_SUCCESS,\n    payload: {\n      data: data,\n      postCount: postCount\n    }\n  };\n};\nexport var fetchPostsFail = function fetchPostsFail(err) {\n  return {\n    type: BLOG.FETCH_POSTS_FAIL,\n    payload: {\n      err: err\n    }\n  };\n};\nexport var fetchPostsRequest = function fetchPostsRequest(query) {\n  return function (dispatch) {\n    dispatch(fetchPosts());\n    blogApis.fetchBlogData(query).then(function (res) {\n      dispatch(fetchPostsSuccess(res.data, res.headers[\"x-total-count\"]));\n    })[\"catch\"](function (err) {\n      dispatch(fetchPostsFail(err));\n    });\n  };\n}; //Fetch recent posts\n\nexport var fetchRecentPosts = function fetchRecentPosts() {\n  return {\n    type: BLOG.FETCH_RECENT_POSTS\n  };\n};\nexport var fetchRecentPostsSuccess = function fetchRecentPostsSuccess(data, postCount) {\n  return {\n    type: BLOG.FETCH_RECENT_POSTS_SUCCESS,\n    payload: {\n      data: data,\n      postCount: postCount\n    }\n  };\n};\nexport var fetchRecentPostsFail = function fetchRecentPostsFail(err) {\n  return {\n    type: BLOG.FETCH_RECENT_POSTS_FAIL,\n    payload: {\n      err: err\n    }\n  };\n};\nexport var fetchRecentPostsRequest = function fetchRecentPostsRequest(query) {\n  return function (dispatch) {\n    dispatch(fetchRecentPosts());\n    blogApis.fetchRecentPostData(query).then(function (res) {\n      dispatch(fetchRecentPostsSuccess(res.data, res.headers[\"x-total-count\"]));\n    })[\"catch\"](function (err) {\n      dispatch(fetchRecentPostsFail(err));\n    });\n  };\n}; //Fetch post details\n\nexport var fetchPostDetail = function fetchPostDetail() {\n  return {\n    type: BLOG.FETCH_POST_DETAIL\n  };\n};\nexport var fetchPostDetailSuccess = function fetchPostDetailSuccess(data) {\n  return {\n    type: BLOG.FETCH_POST_DETAIL_SUCCESS,\n    payload: {\n      data: data\n    }\n  };\n};\nexport var fetchPostDetailFail = function fetchPostDetailFail(err) {\n  return {\n    type: BLOG.FETCH_POST_DETAIL_FAIL,\n    payload: {\n      err: err\n    }\n  };\n};\nexport var fetchPostDetailRequest = function fetchPostDetailRequest(slug) {\n  return function (dispatch) {\n    dispatch(fetchPostDetail());\n    blogApis.fetchPostDetailData(slug).then(function (res) {\n      dispatch(fetchPostDetailSuccess(res.data));\n    })[\"catch\"](function (err) {\n      dispatch(fetchPostDetailFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/lenovo/OneDrive/Desktop/ogami-main/ogami/src/redux/actions/blogActions.js"],"names":["BLOG","blogApis","fetchPosts","type","FETCH_POSTS","fetchPostsSuccess","data","postCount","FETCH_POSTS_SUCCESS","payload","fetchPostsFail","err","FETCH_POSTS_FAIL","fetchPostsRequest","query","dispatch","fetchBlogData","then","res","headers","fetchRecentPosts","FETCH_RECENT_POSTS","fetchRecentPostsSuccess","FETCH_RECENT_POSTS_SUCCESS","fetchRecentPostsFail","FETCH_RECENT_POSTS_FAIL","fetchRecentPostsRequest","fetchRecentPostData","fetchPostDetail","FETCH_POST_DETAIL","fetchPostDetailSuccess","FETCH_POST_DETAIL_SUCCESS","fetchPostDetailFail","FETCH_POST_DETAIL_FAIL","fetchPostDetailRequest","slug","fetchPostDetailData"],"mappings":"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","sourcesContent":["import { BLOG } from \"../actionTypes\";\nimport * as blogApis from \"../../apis/blog\";\n\n//Fetch all posts\nexport const fetchPosts = () => ({\n  type: BLOG.FETCH_POSTS,\n});\n\nexport const fetchPostsSuccess = (data, postCount) => ({\n  type: BLOG.FETCH_POSTS_SUCCESS,\n  payload: {\n    data,\n    postCount,\n  },\n});\n\nexport const fetchPostsFail = (err) => ({\n  type: BLOG.FETCH_POSTS_FAIL,\n  payload: {\n    err,\n  },\n});\n\nexport const fetchPostsRequest = (query) => {\n  return (dispatch) => {\n    dispatch(fetchPosts());\n    blogApis\n      .fetchBlogData(query)\n      .then((res) => {\n        dispatch(fetchPostsSuccess(res.data, res.headers[\"x-total-count\"]));\n      })\n      .catch((err) => {\n        dispatch(fetchPostsFail(err));\n      });\n  };\n};\n\n//Fetch recent posts\nexport const fetchRecentPosts = () => ({\n  type: BLOG.FETCH_RECENT_POSTS,\n});\n\nexport const fetchRecentPostsSuccess = (data, postCount) => ({\n  type: BLOG.FETCH_RECENT_POSTS_SUCCESS,\n  payload: {\n    data,\n    postCount,\n  },\n});\n\nexport const fetchRecentPostsFail = (err) => ({\n  type: BLOG.FETCH_RECENT_POSTS_FAIL,\n  payload: {\n    err,\n  },\n});\n\nexport const fetchRecentPostsRequest = (query) => {\n  return (dispatch) => {\n    dispatch(fetchRecentPosts());\n    blogApis\n      .fetchRecentPostData(query)\n      .then((res) => {\n        dispatch(\n          fetchRecentPostsSuccess(res.data, res.headers[\"x-total-count\"])\n        );\n      })\n      .catch((err) => {\n        dispatch(fetchRecentPostsFail(err));\n      });\n  };\n};\n\n//Fetch post details\n\nexport const fetchPostDetail = () => ({\n  type: BLOG.FETCH_POST_DETAIL,\n});\n\nexport const fetchPostDetailSuccess = (data) => ({\n  type: BLOG.FETCH_POST_DETAIL_SUCCESS,\n  payload: {\n    data,\n  },\n});\n\nexport const fetchPostDetailFail = (err) => ({\n  type: BLOG.FETCH_POST_DETAIL_FAIL,\n  payload: {\n    err,\n  },\n});\n\nexport const fetchPostDetailRequest = (slug) => {\n  return (dispatch) => {\n    dispatch(fetchPostDetail());\n    blogApis\n      .fetchPostDetailData(slug)\n      .then((res) => {\n        dispatch(fetchPostDetailSuccess(res.data));\n      })\n      .catch((err) => {\n        dispatch(fetchPostDetailFail(err));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}