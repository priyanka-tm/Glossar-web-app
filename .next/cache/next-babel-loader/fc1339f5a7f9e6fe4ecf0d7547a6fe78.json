{"ast":null,"code":"import { v4 as uuidv4 } from \"uuid\";\nimport { fetchProductIdCartData, addCartData, updateCartData, removeCartData } from \"../apis/cart\";\nexport var onAddProductToCart = function onAddProductToCart(_ref) {\n  var product = _ref.product,\n      _ref$quantity = _ref.quantity,\n      quantity = _ref$quantity === void 0 ? 1 : _ref$quantity,\n      onSuccess = _ref.onSuccess,\n      onError = _ref.onError,\n      _ref$getQuantityAvail = _ref.getQuantityAvailable,\n      getQuantityAvailable = _ref$getQuantityAvail === void 0 ? function () {\n    return true;\n  } : _ref$getQuantityAvail;\n  fetchProductIdCartData(product.id).then(function (res) {\n    if (res.data.length === 0) {\n      if (product.quantity === 0) {\n        onError && onError(\"Reached maximum number of products\");\n        getQuantityAvailable && getQuantityAvailable(false);\n      } else {\n        console.log('product:===== ', product);\n        addCartData({\n          // ...product,\n          // id: uuidv4(),\n          item: product.id,\n          quantity: quantity\n        }).then(function (res) {\n          console.log('res:===== ', res);\n          onSuccess && onSuccess(res);\n        })[\"catch\"](function (err) {\n          return onError && onError(\"Add product to cart failed, please try again\", err);\n        });\n      }\n    } else {\n      var pData = res.data[0];\n\n      if (pData.cartQuantity + quantity > pData.quantity) {\n        onError && onError(\"Reached maximum number of products\");\n        getQuantityAvailable(false);\n      } else {\n        updateCartData(pData.id, {\n          cartQuantity: pData.cartQuantity + quantity\n        }).then(function (res) {\n          onSuccess && onSuccess(res);\n        })[\"catch\"](function (err) {\n          return onError && onError(\"Add product to cart failed, please try again\", err);\n        });\n      }\n    }\n  })[\"catch\"](function (err) {\n    return onError && onError(\"Add product to cart failed, please try again\", err);\n  });\n};\nexport var onRemoveProductFromCart = function onRemoveProductFromCart(_ref2) {\n  var cartId = _ref2.cartId,\n      onSuccess = _ref2.onSuccess,\n      onError = _ref2.onError;\n\n  if (cartId && cartId !== \"\" && cartId !== null) {\n    removeCartData(cartId).then(function (res) {\n      return onSuccess && onSuccess(res);\n    })[\"catch\"](function (err) {\n      return onError && onError(\"Remove product failm, pleaser try again\", err);\n    });\n  }\n};\nexport var onChangeProductCartQuantity = function onChangeProductCartQuantity(_ref3) {\n  var product = _ref3.product,\n      quantity = _ref3.quantity,\n      onSuccess = _ref3.onSuccess;\n\n  if (quantity > product.quantity || quantity < 1) {\n    return;\n  }\n\n  updateCartData(product.id, {\n    cartQuantity: quantity\n  }).then(function (res) {\n    return onSuccess && onSuccess(res);\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["E:/clg-project/Glossar-web-app/src/common/cartServices.js"],"names":["v4","uuidv4","fetchProductIdCartData","addCartData","updateCartData","removeCartData","onAddProductToCart","product","quantity","onSuccess","onError","getQuantityAvailable","id","then","res","data","length","console","log","item","err","pData","cartQuantity","onRemoveProductFromCart","cartId","onChangeProductCartQuantity"],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  fetchProductIdCartData,\r\n  addCartData,\r\n  updateCartData,\r\n  removeCartData,\r\n} from \"../apis/cart\";\r\n\r\nexport const onAddProductToCart = ({\r\n  product,\r\n  quantity = 1,\r\n  onSuccess,\r\n  onError,\r\n  getQuantityAvailable = () => true,\r\n}) => {\r\n  fetchProductIdCartData(product.id)\r\n    .then((res) => {\r\n      if (res.data.length === 0) {\r\n        if (product.quantity === 0) {\r\n          onError && onError(\"Reached maximum number of products\");\r\n          getQuantityAvailable && getQuantityAvailable(false);\r\n        } else {\r\n          console.log('product:===== ', product);\r\n          addCartData({\r\n            // ...product,\r\n            // id: uuidv4(),\r\n            item: product.id,\r\n            quantity: quantity,\r\n          })\r\n            .then((res) => {\r\n              console.log('res:===== ', res);\r\n              onSuccess && onSuccess(res)\r\n            })\r\n            \r\n            .catch(\r\n              (err) =>\r\n                onError &&\r\n                onError(\"Add product to cart failed, please try again\", err)\r\n            );\r\n        }\r\n      } else {\r\n        let pData = res.data[0];\r\n        if (pData.cartQuantity + quantity > pData.quantity) {\r\n          onError && onError(\"Reached maximum number of products\");\r\n          getQuantityAvailable(false);\r\n        } else {\r\n          updateCartData(pData.id, {\r\n            cartQuantity: pData.cartQuantity + quantity,\r\n          })\r\n            .then((res) => {\r\n              onSuccess && onSuccess(res);\r\n            })\r\n            .catch(\r\n              (err) =>\r\n                onError &&\r\n                onError(\"Add product to cart failed, please try again\", err)\r\n            );\r\n        }\r\n      }\r\n    })\r\n    .catch(\r\n      (err) =>\r\n        onError && onError(\"Add product to cart failed, please try again\", err)\r\n    );\r\n};\r\n\r\nexport const onRemoveProductFromCart = ({ cartId, onSuccess, onError }) => {\r\n  if (cartId && cartId !== \"\" && cartId !== null) {\r\n    removeCartData(cartId)\r\n      .then((res) => onSuccess && onSuccess(res))\r\n      .catch(\r\n        (err) =>\r\n          onError && onError(\"Remove product failm, pleaser try again\", err)\r\n      );\r\n  }\r\n};\r\n\r\nexport const onChangeProductCartQuantity = ({\r\n  product,\r\n  quantity,\r\n  onSuccess,\r\n}) => {\r\n  if (quantity > product.quantity || quantity < 1) {\r\n    return;\r\n  }\r\n  updateCartData(product.id, { cartQuantity: quantity })\r\n    .then((res) => onSuccess && onSuccess(res))\r\n    .catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}